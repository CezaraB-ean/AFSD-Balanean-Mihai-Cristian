import tkinter as tk
from tkinter import ttk
import random

bar_list = []
n=100
lista = []
for i in range(1,n+1):
    lista.append(i)
lista_valori_folosite = []
def shuffler():
    while len(lista) > len(lista_valori_folosite):
        r_nr = random.choice(lista)
        if lista_valori_folosite.count(r_nr) != 0:
            return shuffler()
        else:
            lista_valori_folosite.append(r_nr)
        print(lista_valori_folosite)

def shuffle_command():
    global lista_valori_folosite
    global bar_list
    lista_valori_folosite = []
    if len(bar_list) != 0:
        for ar in bar_list:
            ar.destroy()
        bar_list = []
    shuffler()
    for i in lista_valori_folosite:
        bar = tk.Frame(bars_frame, width=400 // n, height=400 // n * i, bg="brown")
        bar.pack_propagate(False)
        bar.pack(side='left', expand=False, anchor='s')
        bar_list.append(bar)

def sortare_bule():
    global lista_valori_folosite
    global bar_list
    ok = 0
    k = 0
    while ok == 0:
        j=0
        for j in  range(0,len(lista_valori_folosite)-1):
            if lista_valori_folosite[j] > lista_valori_folosite[j+1]:
                lista_valori_folosite[j + 1], lista_valori_folosite[j] =  lista_valori_folosite[j], lista_valori_folosite[j+1]
                if len(bar_list) != 0:
                    for ar in bar_list:
                        ar.destroy()
                    bar_list = []
                for i in lista_valori_folosite:
                    bar = tk.Frame(bars_frame, width=400 // n, height=400 // n * i, bg="brown")
                    bar.pack_propagate(False)
                    bar.pack(side='left', expand=False, anchor='s')
                    bar_list.append(bar)
                j = 0
            else:
                k+=1
        print(k)
        if k == len(lista_valori_folosite)-1:
            ok = 1

root = tk.Tk()
root.geometry("550x430")

root.createcommand("Shuffle", shuffle_command)
root.createcommand("Bubble", sortare_bule)
main_frame = tk.Frame(root, bg = 'white')
main_frame.pack_propagate(False)
main_frame.pack(fill = 'both', expand = True)

bars_frame = tk.Frame(main_frame, width = 400, height = 400, bg = 'black')
bars_frame.pack_propagate(False)
bars_frame.pack(side = 'left', padx = 10, pady = 10)

buttons_frame = tk.Frame(main_frame, width = 120, height = 400, bg = 'lightgray')
buttons_frame.pack_propagate(False)
buttons_frame.pack(side = 'right', padx = 10, pady = 10)

sorting_options = ttk.Combobox(buttons_frame, width = 110, justify = "center", height = 3 , state = "readonly", values = ["Bubble sort", "Stupid sort", "Stalin sort"])
sorting_options.pack_propagate(False)
sorting_options.pack(side = 'top', pady = 10, padx = 10)
sorting_options.set("Metode")

speed_options = ttk.Combobox(buttons_frame, width = 110, justify = "center", height = 3, state = "readonly", values = ["Here", "test", "bau"])
speed_options.pack_propagate(False)
speed_options.pack(side = 'top', pady = 10, padx = 10)
speed_options.set("Viteze")

quit_button = tk.Button(buttons_frame, width = 110, height = 1, text = "Quit", justify = "center", command = root.destroy)
quit_button.pack_propagate(False)
quit_button.pack(side = 'bottom', pady = 10, padx = 10)

reset_button = tk.Button(buttons_frame, width = 110, height = 1, text = "Unsort", justify = "center", command = "Shuffle")
reset_button.pack_propagate(False)
reset_button.pack(side = 'bottom', pady = 10, padx = 10)

sortare_button = tk.Button(buttons_frame, width = 110, height = 1, text = "Sort", justify = "center", command = "Bubble")
sortare_button.pack_propagate(False)
sortare_button.pack(side = 'bottom', pady = 10, padx = 10)

i = 1
while i<=n:
    bar = tk.Frame(bars_frame, width=400 // n, height=400 // n * i, bg="brown")
    bar.pack_propagate(False)
    bar.pack(side='left', expand=False, anchor='s')
    bar_list.append(bar)
    i += 1

root.mainloop()
